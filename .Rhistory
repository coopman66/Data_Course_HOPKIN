enter_fade() +
exit_fade() +
labs(title = "Month: {frame_state}")
ggplot(MplsStops, aes(x=lat,y=long)) + geom_bin2d() +
transition_states(Month, transition_length = 3,state_length = 3) +
enter_fade() +
exit_fade() +
labs(title = "Month: {frame_state}")
ggplot(MplsStops, aes(x=lat,y=long)) + geom_bin2d() +
labs(title = "Month: {frame_state}") +
transition_time(Month) +
ease_aes('linear')
(MplsStops$date)
year(MplsStops$date)
ggplot(MplsStops, aes(x=lat,y=long)) + geom_bin2d() +
labs(title = "Month: {frame_state}") +
transition_time(date) +
ease_aes('linear')
ggplot(MplsStops, aes(x=lat,y=long)) + geom_bin2d() +
transition_time(date) +
ease_aes('linear')
ggplot(MplsStops, aes(x=lat,y=long)) + geom_bin2d() +
labs(title = 'Date: {frame_time}')
transition_time(date) +
ease_aes('linear')
ggplot(MplsStops, aes(x=lat,y=long)) + geom_bin2d() +
labs(title = 'Date: {frame_time}') +
transition_time(date) +
ease_aes('linear')
dat = read.csv("./Data/landdata-states.csv")
ggplot(dat,aes(x=Home.Value)) +
geom_density()
ggplot(dat,aes(x=Home.Value)) +
geom_density(aes(fill = region))
ggplot(na.omit(dat),aes(x=Home.Value)) +
geom_density(aes(fill = region))
ggplot(na.omit(dat),aes(x=Home.Value)) +
geom_density(aes(fill = region)) +
facet_grid(~ region)
?ease_aes
ggplot(na.omit(dat),aes(x=Home.Value)) +
geom_density(aes(fill = region)) +
facet_grid(~ region) +
transition_time(Date) +
ease_aes('cubic') +
labs(title = 'Year: {frame_time}')
ggplot(na.omit(dat),aes(x=Home.Value)) +
geom_density(aes(fill = region)) +
facet_grid(~ region) +
transition_time(Date) +
ease_aes('linear') +
labs(title = 'Year: {frame_time}')
ggplot(na.omit(dat),aes(x=Home.Value)) +
geom_density(aes(fill = region)) +
facet_grid(~ region) +
transition_states(Date,transition_length = 3,state_length = 4) +
ease_aes('linear') +
labs(title = 'Year: {frame_states}')
ggplot(na.omit(dat),aes(x=Home.Value)) +
geom_density(aes(fill = region)) +
facet_grid(~ region) +
transition_states(Date,transition_length = 3,state_length = 4) +
labs(title = 'Year: {frame_states}')
ggplot(na.omit(dat),aes(x=Home.Value)) +
geom_density(aes(fill = region)) +
facet_grid(~ region) +
transition_states(Date,transition_length = 3,state_length = 4) +
enter_fade() + exit_fade()
devtools::install_github("thomasp85/transformr")
library(transformr)
ggplot(na.omit(dat),aes(x=Home.Value)) +
geom_density(aes(fill = region)) +
facet_grid(~ region) +
transition_states(Date,transition_length = 3,state_length = 4) +
enter_fade() + exit_fade()
ggplot(na.omit(dat),aes(x=region,y=Home.Value)) +
geom_violin(aes(fill = region)) +
transition_states(Date,transition_length = 3,state_length = 4) +
enter_fade() + exit_fade()
ggplot(na.omit(dat),aes(x=region,y=Home.Value)) +
geom_violin(aes(fill = region)) +
transition_states(Date,transition_length = 3,state_length = 4) +
enter_fade() + exit_fade()
ggplot(na.omit(dat),aes(x=region,y=Home.Value)) +
geom_violin(aes(fill = region)) +
transition_states(Date,transition_length = 3,state_length = 4) +
enter_fade() + exit_fade()
ggplot(MplsStops, aes(x=lat,y=long)) + geom_bin2d() +
labs(title = 'Date: {frame_time}') +
transition_time(date) +
ease_aes('linear')
data("MplsDemo") # demographic info by neighborhood can be joined to our police stop dataset
income = as.numeric(as.character(plyr::mapvalues(MplsStops$neighborhood, from=MplsDemo$neighborhood, to = MplsDemo$hhIncome)))
data("MplsStops")
library(carData)
data("MplsDemo") # demographic info by neighborhood can be joined to our police stop dataset
data("MplsStops")
income = as.numeric(as.character(plyr::mapvalues(MplsStops$neighborhood, from=MplsDemo$neighborhood, to = MplsDemo$hhIncome)))
MplsStops$income <- income
ggplot(MplsStops, aes(x=lat,y=long,color=income)) + geom_point(alpha=.2)
ggplot(MplsStops, aes(x=lat,y=long,color=income)) + geom_point(alpha=.2) + scale_color_continuous(low = pal[1],high = pal[4])
ggplot(MplsStops, aes(x=lat,y=long,color=income)) + geom_point(alpha=.2) + scale_color_continuous(low = pal[4],high = pal[6])
ggplot(MplsStops, aes(x=lat,y=long,color=income)) + geom_point(alpha=.2) +
scale_color_continuous(low = pal[4],high = pal[6]) +
theme_minimal()
ggplot(MplsStops, aes(x=income)) + geom_histogram(bins = 30)
counts = as.data.frame(table(MplsStops$income))
counts$Var1 <- as.numeric(as.character(counts$Var1))
mod1 = lm(Freq ~ Var1, data = counts)
ggplot(counts, aes(x=Var1,y=Freq)) + geom_point() + geom_smooth(method="lm") +
labs(x="Mean neighborhood income",y="Numer of police stops",title = "Police stop counts in each neighborhood",
subtitle = paste0("Adjusted R-sq. value = ",signif(summary(mod1)$adj.r.squared),3)) +
theme_minimal()
counts
df = read.csv("~/Desktop/2019-09-13T1504_Grades-BIOL-1620-002___Fall_2019_exam1.csv")
df$Exam.1..4348457.
na.omit(df$Exam.1..4348457.)
score=na.omit(df$Exam.1..4348457.)
score[score > 0]
score = score[score > 0]
ggplot() + geom_violin(aes(x="Exam 1",y="score"))
ggplot() + geom_violin(aes(x="Exam 1",y=score))
ggplot() + geom_violin(aes(x="Exam 1",y=score),fill="DarkGreen") + scale_y_continuous(limits = c(0,100))
ggplot() + geom_violin(aes(x="Exam 1",y=score),fill="DarkGreen") + scale_y_continuous(limits = c(0,100)) +
theme_bw() + theme(axis.text = element_text(face="bold"))
ggplot() + geom_violin(aes(x="Exam 1",y=score),fill="DarkGreen") + scale_y_continuous(limits = c(0,100)) +
theme_bw() + theme(axis.text = element_text(face="bold",size=18))
ggplot() + geom_violin(aes(x="Exam 1",y=score),fill="DarkGreen") + scale_y_continuous(limits = c(0,100)) +
theme_bw() + theme(axis.text = element_text(face="bold",size=18),
axis.title = element_text(face="bold",size=18)) +
labs(x=NULL,y="Score out of 100")
ggplot() + geom_density(aes(x=score))
score=score[-1]
ggplot() + geom_density(aes(x=score))
ggplot() + geom_density(aes(x=score))+ scale_x_continuous(limits = c(0,100)) +
theme_bw() + theme(axis.text = element_text(face="bold",size=18),
axis.title = element_text(face="bold",size=18)) +
labs(y=NULL,x="Score out of 100")
ggplot() + geom_density(aes(x=score),fill="DarkGreen")+ scale_x_continuous(limits = c(0,100)) +
theme_bw() + theme(axis.text = element_text(face="bold",size=18),
axis.title = element_text(face="bold",size=18)) +
labs(y=NULL,x="Score out of 100")
ggplot() + geom_density(aes(x=score),fill="DarkGreen")+ scale_x_continuous(limits = c(0,100)) +
theme_bw() + theme(axis.text = element_text(face="bold",size=18),
axis.title = element_text(face="bold",size=18),
axis.text.x = element_blank()) +
labs(y=NULL,x="Score out of 100")
ggplot() + geom_density(aes(x=score),fill="DarkGreen")+ scale_x_continuous(limits = c(0,100)) +
theme_bw() + theme(axis.text = element_text(face="bold",size=18),
axis.title = element_text(face="bold",size=18),
axis.ticks.x = element_blank()) +
labs(y=NULL,x="Score out of 100")
ggplot() + geom_density(aes(x=score),fill="DarkGreen")+ scale_x_continuous(limits = c(0,100)) +
theme_bw() + theme(axis.text = element_text(face="bold",size=18),
axis.title = element_text(face="bold",size=18),
axis.text.y = element_blank()) +
labs(y=NULL,x="Score out of 100")
df = read.csv("~/Desktop/2019-09-13T1504_Grades-BIOL-1620-002___Fall_2019_exam1.csv")
score=na.omit(df$Exam.1..4348457.)
score = score[score > 0]
score=score[-1]
ggplot() + geom_violin(aes(x="Exam 1",y=score),fill="DarkGreen") + scale_y_continuous(limits = c(0,100)) +
theme_bw() + theme(axis.text = element_text(face="bold",size=18),
axis.title = element_text(face="bold",size=18)) +
labs(x=NULL,y="Score out of 100")
ggplot() + geom_density(aes(x=score),fill="DarkGreen")+ scale_x_continuous(limits = c(0,100)) +
theme_bw() + theme(axis.text = element_text(face="bold",size=18),
axis.title = element_text(face="bold",size=18),
axis.text.y = element_blank()) +
labs(y=NULL,x="Score out of 100")
ggsave("~/Desktop/1620_Exam1_distribution.png")
summary(score)
summary(score); sd(score)
pnorm(score,68.24,14.28)
ggplot() + geom_histogram(aes(x=score),fill="DarkGreen")+ scale_x_continuous(limits = c(0,100)) +
theme_bw() + theme(axis.text = element_text(face="bold",size=18),
axis.title = element_text(face="bold",size=18),
axis.text.y = element_blank()) +
labs(y=NULL,x="Score out of 100")
ggplot() + geom_histogram(aes(x=score),fill="DarkGreen",bins = length(score))+ scale_x_continuous(limits = c(0,100)) +
theme_bw() + theme(axis.text = element_text(face="bold",size=18),
axis.title = element_text(face="bold",size=18),
axis.text.y = element_blank()) +
labs(y=NULL,x="Score out of 100")
pnorm(score,68.24,14.28)
camels = rnorm(1000,10,8)
camels = round(rnorm(1000,10,8))
camels = abs(round(rnorm(1000,10,8)))
biscuit = 1:1000
ggplot(mapping = aes(x=biscuit,y=camels)) +
geom_jitter()
add = 1:1000
ggplot(mapping = aes(x=biscuit,y=camels+add)) +
geom_jitter()
rbinom(1000,3,.5)
add = rbinom(1000,3,.5)
ggplot(mapping = aes(x=biscuit,y=camels+add)) +
geom_jitter()
ggplot(mapping = aes(x=biscuit,y=camels*add)) +
geom_jitter()
ggplot(mapping = aes(x=biscuit,y=(camels*add)+add)) +
geom_jitter()
ggplot(mapping = aes(x=biscuit,y=(camels*add)+add+rnorm(1000,8,2))) +
geom_jitter()
ggplot(mapping = aes(x=biscuit,y=(camels*add)+add+rnorm(1000,8,2)+biscuit)) +
geom_jitter()
biscuit = 1:100
ggplot(mapping = aes(x=biscuit,y=(camels*add)+add+rnorm(1000,8,2)+biscuit)) +
geom_jitter()
ggplot(mapping = aes(x=biscuit,y=(camels*add)+add+rnorm(1000,8,2)+rep(biscuit,10))) +
geom_jitter()
rep(biscuit,10)
ggplot(mapping = aes(x=biscuit,y=(camels*add)+add+rep(biscuit,10))) +
geom_jitter()
biscuit = 1:100
ggplot(mapping = aes(x=1:1000,y=(camels*add)+add+rep(biscuit,10))) +
geom_jitter()
forces = 1:10
ggplot(mapping = aes(x=1:1000,y=(camels*add)+add+rep(biscuit,10),color=forces)) +
geom_jitter()
ggplot(mapping = aes(x=1:1000,y=(camels*add)+add+rep(biscuit,10),color=rep(forces,10))) +
geom_jitter()
ggplot(mapping = aes(x=1:1000,y=(camels*add)+add+rep(biscuit,10),color=rep(forces,100))) +
geom_jitter()
ggplot(mapping = aes(x=1:1000,y=(camels*add)+add+rep(biscuit,10),color=rep(forces,100))) +
geom_jitter() +
labs(x="camelID",y="forces",color="anger") +
facet_grid(~forces)
ggplot(mapping = aes(x=1:1000,y=(camels*add)+add+rep(biscuit,10),color=rep(forces,100))) +
geom_jitter() +
labs(x="camelID",y="forces",color="anger")
ggplot(mapping = aes(x=1:1000,y=(camels*add)+add+rep(biscuit,10),color=rep(forces,100))) +
geom_jitter() + geom_path() +
labs(x="camelID",y="forces",color="anger")
ggplot(mapping = aes(x=1:1000,y=(camels*add)+add+rep(biscuit,10),color=rep(forces,100))) +
geom_jitter() + geom_path() +
labs(x="camelID",y="forces",color="anger") +
theme(plot.background = element_rect(color="Firebrick"))
ggplot(mapping = aes(x=1:1000,y=(camels*add)+add+rep(biscuit,10),color=rep(forces,100))) +
geom_jitter() + geom_path() +
labs(x="camelID",y="forces",color="anger") +
theme(plot.background = element_rect(fill="Firebrick"))
ggplot(mapping = aes(x=1:1000,y=(camels*add)+add+rep(biscuit,10),color=rep(forces,100))) +
geom_jitter() + geom_path() +
labs(x="camelID",y="forces",color="anger") +
theme(plot.background = element_rect(fill="Firebrick"),panel.background = element_rect(fill="Yellow"))
ggplot(mapping = aes(x=1:1000,y=(camels*add)+add+rep(biscuit,10),color=rep(forces,100),size=add)) +
geom_jitter() + geom_path() +
labs(x="camelID",y="forces",color="anger") +
theme(plot.background = element_rect(fill="Firebrick"),panel.background = element_rect(fill="Yellow"))
ggsave("~/Desktop/camels.png")
ggplot(mapping = aes(x=1:1000,y=(camels*add)+add+rep(biscuit,10),color=rep(forces,100),size=add)) +
geom_jitter() + geom_path() +
labs(x="camelID",y="forces",color="anger",size="biscuit-ness") +
theme(plot.background = element_rect(fill="Firebrick"),panel.background = element_rect(fill="Yellow"))
ggsave("~/Desktop/camels.png")
data_frame(t=seq(-pi, 0, .001),
x1=16*(sin(t))^2,
x2=-x1,
y=13*cos(t) -5 * cos(2*t) -2*cos(3*t) - cos(4*t)) %>%
gather(side, x, x1, x2)
library(tidyverse)
data_frame(t=seq(-pi, 0, .001),
x1=16*(sin(t))^2,
x2=-x1,
y=13*cos(t) -5 * cos(2*t) -2*cos(3*t) - cos(4*t)) %>%
gather(side, x, x1, x2)
data(iris)
View(iris)
iris[iris$Species == "Setosa"]
iris[iris$Species == "Setosa",]
iris[iris$Species == "setosa",]
dat = read.csv("./Exams/Exam_1/DNA_Conc_by_Extraction_Date.csv")
dat = read.csv("./Exams/Exam_1/DNA_Conc_by_Extraction_Date.csv",sep="\t")
dat = read.csv("./Exams/Exam_1/DNA_Conc_by_Extraction_Date.csv")
dat$Date_Collected <- as.POSIXct(dat$Date_Collected)
hist(dat$DNA_Concentration_Katy)
hist(dat$DNA_Concentration_Ben)
plot(x=dat$Year_Collected,y=dat$DNA_Concentration_Katy)
boxplot(x=dat$Year_Collected,y=dat$DNA_Concentration_Katy)
dat$Year_Collected <- as.factor(dat$Year_Collected)
boxplot(x=dat$Year_Collected,y=dat$DNA_Concentration_Katy)
plot(x=dat$Year_Collected,y=dat$DNA_Concentration_Katy)
plot(x=dat$Year_Collected,y=dat$DNA_Concentration_Katy,xlab="YEAR",ylab="DNA Concentration",main="Katy's Extractions")
plot(x=dat$Year_Collected,y=dat$DNA_Concentration_Ben,xlab="YEAR",ylab="DNA Concentration",main="Ben's Extractions")
jpeg("./Exams/Exam_1/ZAHN_Plot1.jpeg")
plot(x=dat$Year_Collected,y=dat$DNA_Concentration_Katy,xlab="YEAR",ylab="DNA Concentration",main="Katy's Extractions")
dev.off()
jpeg("./Exams/Exam_1/ZAHN_Plot2.jpeg")
plot(x=dat$Year_Collected,y=dat$DNA_Concentration_Ben,xlab="YEAR",ylab="DNA Concentration",main="Ben's Extractions")
dev.off()
plot(dat$DNA_Concentration_Ben,dat$DNA_Concentration_Katy)
plot(dat$DNA_Concentration_Ben-dat$DNA_Concentration_Katy)
boxplot(dat$DNA_Concentration_Ben-dat$DNA_Concentration_Katy)
barplot(dat$DNA_Concentration_Ben-dat$DNA_Concentration_Katy)
plot(x=Year_Collected, y=dat$DNA_Concentration_Ben-dat$DNA_Concentration_Katy)
plot(x=dat$Year_Collected, y=dat$DNA_Concentration_Ben-dat$DNA_Concentration_Katy)
lowest <- dat$DNA_Concentration_Ben-dat$DNA_Concentration_Katy
lowest
which(lowest == min(lowest))
row <- which(lowest == min(lowest))
dat[row,"Year_Collected"]
lowest <- dat$DNA_Concentration_Ben/dat$DNA_Concentration_Katy
row <- which(lowest == min(lowest))
dat[row,"Year_Collected"]
down <- dat[dat$Lab == "Downstairs"]
down <- dat[dat$Lab == "Downstairs",]
plot(x=down$Date_Collected,y=down$DNA_Concentration_Ben)
dat = read.csv("./Exams/Exam_1/DNA_Conc_by_Extraction_Date.csv")
down <- dat[dat$Lab == "Downstairs",]
plot(x=down$Date_Collected,y=down$DNA_Concentration_Ben)
library(tidyverse)
data_frame(t=seq(-pi, 0, .001),
x1=16*(sin(t))^2,
x2=-x1,
y=13*cos(t) -5 * cos(2*t) -2*cos(3*t) - cos(4*t)) %>%
gather(side, x, x1, x2) %>%
ggplot(aes(x,y)) +
geom_polygon(fill="red") +
coord_fixed() +
theme_minimal() +
annotate("text",x=0,y=0,label="Happy Valentine's Day")
data(iris)
iris[iris$Species == "setosa",]
# Exam 1
dat = read.csv("./Exams/Exam_1/DNA_Conc_by_Extraction_Date.csv")
dat$Date_Collected <- as.POSIXct(dat$Date_Collected)
dat$Year_Collected <- as.factor(dat$Year_Collected)
# Part I
hist(dat$DNA_Concentration_Katy)
hist(dat$DNA_Concentration_Ben)
# Parts II & III
jpeg("./Exams/Exam_1/ZAHN_Plot1.jpeg")
plot(x=dat$Year_Collected,y=dat$DNA_Concentration_Katy,xlab="YEAR",ylab="DNA Concentration",main="Katy's Extractions")
dev.off()
jpeg("./Exams/Exam_1/ZAHN_Plot2.jpeg")
plot(x=dat$Year_Collected,y=dat$DNA_Concentration_Ben,xlab="YEAR",ylab="DNA Concentration",main="Ben's Extractions")
dev.off()
# Part IV
plot(dat$DNA_Concentration_Ben,dat$DNA_Concentration_Katy)
plot(x=dat$Year_Collected, y=dat$DNA_Concentration_Ben-dat$DNA_Concentration_Katy)
lowest <- dat$DNA_Concentration_Ben-dat$DNA_Concentration_Katy
row <- which(lowest == min(lowest))
dat[row,"Year_Collected"]
# Part V
down <- dat[dat$Lab == "Downstairs",]
plot(x=down$Date_Collected,y=down$DNA_Concentration_Ben)
plot(x=down$Date_Collected,y=down$DNA_Concentration_Ben,xlab="Date_Collected",ylab="DNA_Cencentration_Ben")
jpeg("./Exams/Exam_1/Downstairs.jpeg")
plot(x=down$Date_Collected,y=down$DNA_Concentration_Ben,xlab="Date_Collected",ylab="DNA_Cencentration_Ben")
dev.off()
# Using for-loop
means = c()
x = 1
for(i in unique(df.ben$Year)){
means[x] = mean(df.ben[df.ben$Year == i,"DNA_Conc"])
x=x+1
}
dat2 = data.frame(Year = unique(df.ben$Year), MeanDNAConc = means)
df.ben = data.frame(Year = dat$Year_Collected, DNA_Conc = dat$DNA_Concentration_Ben)
# Using for-loop
means = c()
x = 1
for(i in unique(df.ben$Year)){
means[x] = mean(df.ben[df.ben$Year == i,"DNA_Conc"])
x=x+1
}
dat2 = data.frame(Year = unique(df.ben$Year), MeanDNAConc = means)
dat2
library(dplyr)
dat %>%
select("Year_Collected")
dat %>%
select("Year_Collected","DNA_Concentration_Ben")
dat %>%
select("Year_Collected","DNA_Concentration_Ben") %>%
group_by(Year_Collected) %>%
summarize(Mean = mean(DNA_Concentration_Ben))
dat2
hist(dat$Extract.Code)
hist(dat$DNA_Concentration_Ben)
skimr::skim(dat)
skimr::skim(midwest)
data("iris")
iris$Species
iris[iris$Species == "versicolor",]
iris[iris$Species == "versicolor","Sepal.Length"]
mena(iris[iris$Species == "versicolor","Sepal.Length"])
mean(iris[iris$Species == "versicolor","Sepal.Length"])
mean(iris[iris$Species == "versicolor","Sepal.Length"])
mean(iris[iris$Species == "virginica","Sepal.Length"])
mean(iris[iris$Species == "setosa","Sepal.Length"])
unique(iris$Species)
iris$Species
unique(iris$Species)
vec=c()
x=1
for(i in unique(iris$Species)){
vec[x] = mean(iris[iris$Species == i,"Sepal.Length"])
x=x+1
}
vec
cbind(unique(iris$Species,vec))
data.frame(Species = unique(iris$Species,MeanSepalLength = vec))
data.frame(Species = unique(iris$Species),MeanSepalLength = vec)
iris
dat <- read.csv("~/Desktop/UVU/Tenure_Package/Extra_Stuff/Teaching_Evaluations/SRI_Summaries.csv")
library(ggplot2)
str(dat)
dat$Year
dat <- read.csv("~/Desktop/UVU/Tenure_Package/Extra_Stuff/Teaching_Evaluations/SRI_Summaries2.csv")
dat$Year
dat <- read.csv("~/Desktop/UVU/Tenure_Package/Extra_Stuff/Teaching_Evaluations/SRI_Summaries2.csv")
dat$Year
library(ggplot2)
str(dat)
paste(dat$Year,dat$Semester)
timepoint = c(rep(1,12),rep(2,12),rep(3,12),rep(4,9))
dat$Timepoint = timepoint
ggplot(dat,aes(x=Timepoint,y=Mean,fill=Year)) +
geom_point()
ggplot(dat,aes(x=Timepoint,y=Mean,fill=Year)) +
geom_point() + facet_grid(~Course)
ggplot(dat,aes(x=Timepoint,y=Mean,fill=Year)) +
geom_bar(stat="identity") + facet_grid(~Course)
ggplot(dat,aes(x=Timepoint,y=Mean,fill=Category)) +
geom_bar(stat="identity") + facet_grid(~Course)
ggplot(dat,aes(x=Timepoint,y=Mean,fill=Category)) +
geom_bar(stat="identity",position="dodge") + facet_grid(~Course)
ggplot(dat,aes(x=Timepoint,y=Mean,fill=Category)) +
geom_bar(stat="identity",position="dodge") + facet_grid(~Course) +
theme_bw()
ggplot(dat,aes(x=Timepoint,y=Mean,fill=Category)) +
geom_bar(stat="identity",position="dodge") + facet_grid(~Desc) +
theme_bw()
dat$max = dat$Mean + dat$StDev
dat$min = dat$Mean - dat$StDev
?geom_errorbar()
ggplot(dat,aes(x=Timepoint,y=Mean,fill=Category)) +
geom_bar(stat="identity",position="dodge") +
geom_errorbar(aes(ymin=min,ymax=max))+
facet_grid(~Desc) +
theme_bw()
ggplot(dat,aes(x=Timepoint,y=Mean,fill=Category)) +
geom_bar(stat="identity",position="dodge") +
geom_errorbar(aes(ymin=min,ymax=max),position="dodge")+
facet_grid(~Desc) +
theme_bw()
ggplot(dat,aes(x=Timepoint,y=Mean,fill=Category)) +
geom_bar(stat="identity",position="dodge") +
geom_errorbar(aes(ymin=min,ymax=max),position="dodge")+
facet_grid(~Desc) +
theme_bw() +
scale_fill_manual(values = c("#1a2ced","#cbf783","#73183e"))
plyr::mapvalues(dat$Timepoint, from = 1:4,to=c("Fa_17","Sp_18","Fa_18","Sp_19"))
timepoint = plyr::mapvalues(dat$Timepoint, from = 1:4,to=c("Fa_17","Sp_18","Fa_18","Sp_19"))
timepoint = plyr::mapvalues(dat$Timepoint, from = 1:4,to=c("Fa_17","Sp_18","Fa_18","Sp_19"))
ordered(timepoint)
timepoint = ordered(timepoint)
dat$Timepoint = timepoint
ggplot(dat,aes(x=Timepoint,y=Mean,fill=Category)) +
geom_bar(stat="identity",position="dodge") +
geom_errorbar(aes(ymin=min,ymax=max),position="dodge")+
facet_grid(~Desc) +
theme_bw() +
scale_fill_manual(values = c("#1a2ced","#cbf783","#73183e"))
ggplot(dat,aes(x=Timepoint,y=Mean,fill=Category)) +
geom_bar(stat="identity",position="dodge") +
geom_errorbar(aes(ymin=min,ymax=max),position="dodge")+
facet_grid(~Desc) +
theme_bw() +
scale_fill_manual(values = c("#1a2ced","#cbf783","#73183e")) +
theme(axis.text.x = element_text(angle=90,hjust=1))
ggplot(dat,aes(x=Timepoint,y=Mean,fill=Category)) +
geom_bar(stat="identity",position="dodge") +
geom_errorbar(aes(ymin=min,ymax=max),position="dodge",linetype=2)+
facet_grid(~Desc) +
theme_bw() +
scale_fill_manual(values = c("#1a2ced","#cbf783","#73183e")) +
theme(axis.text.x = element_text(angle=90,hjust=1))
ggplot(dat,aes(x=Timepoint,y=Mean,fill=Category)) +
geom_bar(stat="identity",position="dodge") +
geom_errorbar(aes(ymin=min,ymax=max),position="dodge",alpha=.25)+
facet_grid(~Desc) +
theme_bw() +
scale_fill_manual(values = c("#1a2ced","#cbf783","#73183e")) +
theme(axis.text.x = element_text(angle=90,hjust=1))
ggplot(dat,aes(x=Timepoint,y=Mean,fill=Category)) +
geom_bar(stat="identity",position="dodge") +
geom_errorbar(aes(ymin=min,ymax=max),position="dodge",alpha=.25)+
facet_grid(~Desc) +
theme_bw() +
scale_fill_manual(values = c("#1a2ced","#cbf783","#73183e")) +
theme(axis.text.x = element_text(angle=90,hjust=1,size=12))
ggplot(dat,aes(x=Timepoint,y=Mean,fill=Category)) +
geom_bar(stat="identity",position="dodge") +
geom_errorbar(aes(ymin=min,ymax=max),position="dodge",alpha=.25)+
facet_grid(~Desc) +
theme_bw() +
scale_fill_manual(values = c("#1a2ced","#cbf783","#73183e")) +
theme(axis.text.x = element_text(angle=90,hjust=1,size=12,face="bold"),
axis.title = element_text(face = "bold",size=16))
library(dplyr)
dat %>% group_by(Timepoint,Desc) %>%
summarize(Mean = mean(Mean))
dat %>% group_by(Timepoint,Desc) %>%
summarize(Mean = mean(Mean),
SD = mean(StDev))
dat %>% group_by(Timepoint,Desc) %>%
summarize(Mean = mean(Mean),
SD = mean(StDev)) %>%
broom::tidy()
