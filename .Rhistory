plot(x=dat$Year_Collected, y=dat$DNA_Concentration_Ben-dat$DNA_Concentration_Katy)
lowest <- dat$DNA_Concentration_Ben-dat$DNA_Concentration_Katy
lowest
which(lowest == min(lowest))
row <- which(lowest == min(lowest))
dat[row,"Year_Collected"]
lowest <- dat$DNA_Concentration_Ben/dat$DNA_Concentration_Katy
row <- which(lowest == min(lowest))
dat[row,"Year_Collected"]
down <- dat[dat$Lab == "Downstairs"]
down <- dat[dat$Lab == "Downstairs",]
plot(x=down$Date_Collected,y=down$DNA_Concentration_Ben)
dat = read.csv("./Exams/Exam_1/DNA_Conc_by_Extraction_Date.csv")
down <- dat[dat$Lab == "Downstairs",]
plot(x=down$Date_Collected,y=down$DNA_Concentration_Ben)
library(tidyverse)
data_frame(t=seq(-pi, 0, .001),
x1=16*(sin(t))^2,
x2=-x1,
y=13*cos(t) -5 * cos(2*t) -2*cos(3*t) - cos(4*t)) %>%
gather(side, x, x1, x2) %>%
ggplot(aes(x,y)) +
geom_polygon(fill="red") +
coord_fixed() +
theme_minimal() +
annotate("text",x=0,y=0,label="Happy Valentine's Day")
data(iris)
iris[iris$Species == "setosa",]
# Exam 1
dat = read.csv("./Exams/Exam_1/DNA_Conc_by_Extraction_Date.csv")
dat$Date_Collected <- as.POSIXct(dat$Date_Collected)
dat$Year_Collected <- as.factor(dat$Year_Collected)
# Part I
hist(dat$DNA_Concentration_Katy)
hist(dat$DNA_Concentration_Ben)
# Parts II & III
jpeg("./Exams/Exam_1/ZAHN_Plot1.jpeg")
plot(x=dat$Year_Collected,y=dat$DNA_Concentration_Katy,xlab="YEAR",ylab="DNA Concentration",main="Katy's Extractions")
dev.off()
jpeg("./Exams/Exam_1/ZAHN_Plot2.jpeg")
plot(x=dat$Year_Collected,y=dat$DNA_Concentration_Ben,xlab="YEAR",ylab="DNA Concentration",main="Ben's Extractions")
dev.off()
# Part IV
plot(dat$DNA_Concentration_Ben,dat$DNA_Concentration_Katy)
plot(x=dat$Year_Collected, y=dat$DNA_Concentration_Ben-dat$DNA_Concentration_Katy)
lowest <- dat$DNA_Concentration_Ben-dat$DNA_Concentration_Katy
row <- which(lowest == min(lowest))
dat[row,"Year_Collected"]
# Part V
down <- dat[dat$Lab == "Downstairs",]
plot(x=down$Date_Collected,y=down$DNA_Concentration_Ben)
plot(x=down$Date_Collected,y=down$DNA_Concentration_Ben,xlab="Date_Collected",ylab="DNA_Cencentration_Ben")
jpeg("./Exams/Exam_1/Downstairs.jpeg")
plot(x=down$Date_Collected,y=down$DNA_Concentration_Ben,xlab="Date_Collected",ylab="DNA_Cencentration_Ben")
dev.off()
# Using for-loop
means = c()
x = 1
for(i in unique(df.ben$Year)){
means[x] = mean(df.ben[df.ben$Year == i,"DNA_Conc"])
x=x+1
}
dat2 = data.frame(Year = unique(df.ben$Year), MeanDNAConc = means)
df.ben = data.frame(Year = dat$Year_Collected, DNA_Conc = dat$DNA_Concentration_Ben)
# Using for-loop
means = c()
x = 1
for(i in unique(df.ben$Year)){
means[x] = mean(df.ben[df.ben$Year == i,"DNA_Conc"])
x=x+1
}
dat2 = data.frame(Year = unique(df.ben$Year), MeanDNAConc = means)
dat2
library(dplyr)
dat %>%
select("Year_Collected")
dat %>%
select("Year_Collected","DNA_Concentration_Ben")
dat %>%
select("Year_Collected","DNA_Concentration_Ben") %>%
group_by(Year_Collected) %>%
summarize(Mean = mean(DNA_Concentration_Ben))
dat2
hist(dat$Extract.Code)
hist(dat$DNA_Concentration_Ben)
skimr::skim(dat)
skimr::skim(midwest)
data("iris")
iris$Species
iris[iris$Species == "versicolor",]
iris[iris$Species == "versicolor","Sepal.Length"]
mena(iris[iris$Species == "versicolor","Sepal.Length"])
mean(iris[iris$Species == "versicolor","Sepal.Length"])
mean(iris[iris$Species == "versicolor","Sepal.Length"])
mean(iris[iris$Species == "virginica","Sepal.Length"])
mean(iris[iris$Species == "setosa","Sepal.Length"])
unique(iris$Species)
iris$Species
unique(iris$Species)
vec=c()
x=1
for(i in unique(iris$Species)){
vec[x] = mean(iris[iris$Species == i,"Sepal.Length"])
x=x+1
}
vec
cbind(unique(iris$Species,vec))
data.frame(Species = unique(iris$Species,MeanSepalLength = vec))
data.frame(Species = unique(iris$Species),MeanSepalLength = vec)
iris
dat <- read.csv("~/Desktop/UVU/Tenure_Package/Extra_Stuff/Teaching_Evaluations/SRI_Summaries.csv")
library(ggplot2)
str(dat)
dat$Year
dat <- read.csv("~/Desktop/UVU/Tenure_Package/Extra_Stuff/Teaching_Evaluations/SRI_Summaries2.csv")
dat$Year
dat <- read.csv("~/Desktop/UVU/Tenure_Package/Extra_Stuff/Teaching_Evaluations/SRI_Summaries2.csv")
dat$Year
library(ggplot2)
str(dat)
paste(dat$Year,dat$Semester)
timepoint = c(rep(1,12),rep(2,12),rep(3,12),rep(4,9))
dat$Timepoint = timepoint
ggplot(dat,aes(x=Timepoint,y=Mean,fill=Year)) +
geom_point()
ggplot(dat,aes(x=Timepoint,y=Mean,fill=Year)) +
geom_point() + facet_grid(~Course)
ggplot(dat,aes(x=Timepoint,y=Mean,fill=Year)) +
geom_bar(stat="identity") + facet_grid(~Course)
ggplot(dat,aes(x=Timepoint,y=Mean,fill=Category)) +
geom_bar(stat="identity") + facet_grid(~Course)
ggplot(dat,aes(x=Timepoint,y=Mean,fill=Category)) +
geom_bar(stat="identity",position="dodge") + facet_grid(~Course)
ggplot(dat,aes(x=Timepoint,y=Mean,fill=Category)) +
geom_bar(stat="identity",position="dodge") + facet_grid(~Course) +
theme_bw()
ggplot(dat,aes(x=Timepoint,y=Mean,fill=Category)) +
geom_bar(stat="identity",position="dodge") + facet_grid(~Desc) +
theme_bw()
dat$max = dat$Mean + dat$StDev
dat$min = dat$Mean - dat$StDev
?geom_errorbar()
ggplot(dat,aes(x=Timepoint,y=Mean,fill=Category)) +
geom_bar(stat="identity",position="dodge") +
geom_errorbar(aes(ymin=min,ymax=max))+
facet_grid(~Desc) +
theme_bw()
ggplot(dat,aes(x=Timepoint,y=Mean,fill=Category)) +
geom_bar(stat="identity",position="dodge") +
geom_errorbar(aes(ymin=min,ymax=max),position="dodge")+
facet_grid(~Desc) +
theme_bw()
ggplot(dat,aes(x=Timepoint,y=Mean,fill=Category)) +
geom_bar(stat="identity",position="dodge") +
geom_errorbar(aes(ymin=min,ymax=max),position="dodge")+
facet_grid(~Desc) +
theme_bw() +
scale_fill_manual(values = c("#1a2ced","#cbf783","#73183e"))
plyr::mapvalues(dat$Timepoint, from = 1:4,to=c("Fa_17","Sp_18","Fa_18","Sp_19"))
timepoint = plyr::mapvalues(dat$Timepoint, from = 1:4,to=c("Fa_17","Sp_18","Fa_18","Sp_19"))
timepoint = plyr::mapvalues(dat$Timepoint, from = 1:4,to=c("Fa_17","Sp_18","Fa_18","Sp_19"))
ordered(timepoint)
timepoint = ordered(timepoint)
dat$Timepoint = timepoint
ggplot(dat,aes(x=Timepoint,y=Mean,fill=Category)) +
geom_bar(stat="identity",position="dodge") +
geom_errorbar(aes(ymin=min,ymax=max),position="dodge")+
facet_grid(~Desc) +
theme_bw() +
scale_fill_manual(values = c("#1a2ced","#cbf783","#73183e"))
ggplot(dat,aes(x=Timepoint,y=Mean,fill=Category)) +
geom_bar(stat="identity",position="dodge") +
geom_errorbar(aes(ymin=min,ymax=max),position="dodge")+
facet_grid(~Desc) +
theme_bw() +
scale_fill_manual(values = c("#1a2ced","#cbf783","#73183e")) +
theme(axis.text.x = element_text(angle=90,hjust=1))
ggplot(dat,aes(x=Timepoint,y=Mean,fill=Category)) +
geom_bar(stat="identity",position="dodge") +
geom_errorbar(aes(ymin=min,ymax=max),position="dodge",linetype=2)+
facet_grid(~Desc) +
theme_bw() +
scale_fill_manual(values = c("#1a2ced","#cbf783","#73183e")) +
theme(axis.text.x = element_text(angle=90,hjust=1))
ggplot(dat,aes(x=Timepoint,y=Mean,fill=Category)) +
geom_bar(stat="identity",position="dodge") +
geom_errorbar(aes(ymin=min,ymax=max),position="dodge",alpha=.25)+
facet_grid(~Desc) +
theme_bw() +
scale_fill_manual(values = c("#1a2ced","#cbf783","#73183e")) +
theme(axis.text.x = element_text(angle=90,hjust=1))
ggplot(dat,aes(x=Timepoint,y=Mean,fill=Category)) +
geom_bar(stat="identity",position="dodge") +
geom_errorbar(aes(ymin=min,ymax=max),position="dodge",alpha=.25)+
facet_grid(~Desc) +
theme_bw() +
scale_fill_manual(values = c("#1a2ced","#cbf783","#73183e")) +
theme(axis.text.x = element_text(angle=90,hjust=1,size=12))
ggplot(dat,aes(x=Timepoint,y=Mean,fill=Category)) +
geom_bar(stat="identity",position="dodge") +
geom_errorbar(aes(ymin=min,ymax=max),position="dodge",alpha=.25)+
facet_grid(~Desc) +
theme_bw() +
scale_fill_manual(values = c("#1a2ced","#cbf783","#73183e")) +
theme(axis.text.x = element_text(angle=90,hjust=1,size=12,face="bold"),
axis.title = element_text(face = "bold",size=16))
library(dplyr)
dat %>% group_by(Timepoint,Desc) %>%
summarize(Mean = mean(Mean))
dat %>% group_by(Timepoint,Desc) %>%
summarize(Mean = mean(Mean),
SD = mean(StDev))
dat %>% group_by(Timepoint,Desc) %>%
summarize(Mean = mean(Mean),
SD = mean(StDev)) %>%
broom::tidy()
rnorm(500,5,1.2)
b = rnorm(500,10,2.3)
a = rnorm(500,5,1.2)
b = rnorm(500,10,2.3)
install.packages("wakefield")
wakefield::birth(500)
wakefield::birth(500,start = "1990-01-01")
library(wakefield)
?birth
wakefield::birth(500,start = as.POSIXct("1990-01-01"))
wakefield::birth(500,start = as.POSIXct("1990-01-01")by = 20)
wakefield::birth(500,start = as.POSIXct("1990-01-01"),by = 20)
wakefield::birth(500,start = as.POSIXct("1990-01-01"),by = 20000)
wakefield::answer(500)
GPA = rnorm(500,3,1.2)
GPA
GPA = rnorm(500,2,1.2)
GPA
GPA = abs(rnorm(500,2,1.2))
wakefield::color(10)
wakefield::zip_code(20)
wakefield::date_stamp(10)
wakefield::age(500)
AGE = Sys.Date() - DOB
DOB = birth(500,start = as.POSIXct("1990-01-01"),by = 20000)
AGE = Sys.Date() - DOB
AGE = diff.Date(Sys.Date(),DOB)
Sys.Date()
AGE = diff(Sys.Date(),DOB)
DOB
AGE = diff(as.POSIXct(Sys.Date()),DOB)
AGE = difftime(as.POSIXct(Sys.Date()),DOB)
AGE
AGE = diff.Date(as.POSIXct(Sys.Date()),DOB)
DaysAlive = diff.Date(as.POSIXct(Sys.Date()),DOB)
DaysAlive = difftime(as.POSIXct(Sys.Date()),DOB)
IQ = rnorm(500,100,30)
IQ
IQ = round(rnorm(500,100,30))
IQ
answer(500)
library(wakefield)
GPA_Male = abs(rnorm(500,2,1.2))
IQ_Male = round(rnorm(500,100,30))
DOB_Male = birth(500,start = as.POSIXct("1990-01-01"),by = 20000)
DaysAlive_Male = difftime(as.POSIXct(Sys.Date()),DOB)
Pass_Male = answer(500)
GPA_Female = abs(rnorm(500,2,1.2))
IQ_Female = round(rnorm(500,100,30))
DOB_Female = birth(500,start = as.POSIXct("1990-01-01"),by = 20000)
DaysAlive_Female = difftime(as.POSIXct(Sys.Date()),DOB)
Pass_Female = answer(500)
data.frame(DOB_Male,DaysAlive_Male,IQ_Male,GPA_Male,Pass_Female,
DOB_Female,DaysAlive_Female,IQ_Female,GPA_Female,Pass_Female)
df = data.frame(DOB_Male,DaysAlive_Male,IQ_Male,GPA_Male,Pass_Female,
DOB_Female,DaysAlive_Female,IQ_Female,GPA_Female,Pass_Female)
library(wakefield)
for(i in 1:8){
GPA_Male = abs(rnorm(500,2,1.2))
IQ_Male = round(rnorm(500,100,30))
DOB_Male = birth(500,start = as.POSIXct("1990-01-01"),by = 20000)
DaysAlive_Male = difftime(as.POSIXct(Sys.Date()),DOB)
Pass_Male = answer(500)
GPA_Female = abs(rnorm(500,2,1.2))
IQ_Female = round(rnorm(500,100,30))
DOB_Female = birth(500,start = as.POSIXct("1990-01-01"),by = 20000)
DaysAlive_Female = difftime(as.POSIXct(Sys.Date()),DOB)
Pass_Female = answer(500)
df = data.frame(DOB_Male,DaysAlive_Male,IQ_Male,GPA_Male,Pass_Female,
DOB_Female,DaysAlive_Female,IQ_Female,GPA_Female,Pass_Female)
assign(x = paste0(i,"_df"),df,envir = .GlobalEnv)
}
library(wakefield)
for(i in 1:8){
GPA_Male = abs(rnorm(500,2,1.2))
IQ_Male = round(rnorm(500,100,30))
DOB_Male = birth(500,start = as.POSIXct("1990-01-01"),by = 20000)
DaysAlive_Male = difftime(as.POSIXct(Sys.Date()),DOB)
Pass_Male = answer(500)
GPA_Female = abs(rnorm(500,2,1.2))
IQ_Female = round(rnorm(500,100,30))
DOB_Female = birth(500,start = as.POSIXct("1990-01-01"),by = 20000)
DaysAlive_Female = difftime(as.POSIXct(Sys.Date()),DOB)
Pass_Female = answer(500)
df = data.frame(DOB_Male,DaysAlive_Male,IQ_Male,GPA_Male,Pass_Female,
DOB_Female,DaysAlive_Female,IQ_Female,GPA_Female,Pass_Female)
assign(x = paste0(i,"_df"),value = df,envir = .GlobalEnv)
}
GPA_Female = abs(rnorm(500,2,1.2))
IQ_Female = round(rnorm(500,100,30))
DOB_Female = birth(500,start = as.POSIXct("1990-01-01"),by = 20000)
DaysAlive_Female = difftime(as.POSIXct(Sys.Date()),DOB)
Pass_Female = answer(500)
Pass_Female
df = data.frame(DOB_Male,DaysAlive_Male,IQ_Male,GPA_Male,Pass_Female,
DOB_Female,DaysAlive_Female,IQ_Female,GPA_Female,Pass_Female)
df
library(wakefield)
for(i in 1:8){
IQ_Male = round(rnorm(500,100,30))
DOB_Male = birth(500,start = as.POSIXct("1990-01-01"),by = 20000)
DaysAlive_Male = difftime(as.POSIXct(Sys.Date()),DOB)
Pass_Male = answer(500)
IQ_Female = round(rnorm(500,100,30))
DOB_Female = birth(500,start = as.POSIXct("1990-01-01"),by = 20000)
DaysAlive_Female = difftime(as.POSIXct(Sys.Date()),DOB)
Pass_Female = answer(500)
df = data.frame(DOB_Male,DaysAlive_Male,IQ_Male,Pass_Female,
DOB_Female,DaysAlive_Female,IQ_Female,Pass_Female)
assign(x = paste0(i,"_df"),value = df,envir = .GlobalEnv)
}
paste0(i,"_df")
library(wakefield)
for(i in 1:8){
IQ_Male = round(rnorm(500,100,30))
DOB_Male = birth(500,start = as.POSIXct("1990-01-01"),by = 20000)
DaysAlive_Male = difftime(as.POSIXct(Sys.Date()),DOB)
Pass_Male = answer(500)
IQ_Female = round(rnorm(500,100,30))
DOB_Female = birth(500,start = as.POSIXct("1990-01-01"),by = 20000)
DaysAlive_Female = difftime(as.POSIXct(Sys.Date()),DOB)
Pass_Female = answer(500)
df = data.frame(DOB_Male,DaysAlive_Male,IQ_Male,Pass_Female,
DOB_Female,DaysAlive_Female,IQ_Female,Pass_Female)
assign(x = paste0(i,"_df"),value = df,envir = .GlobalEnv)
}
library(wakefield)
for(i in c("a","b","c","d","e","f","g")){
IQ_Male = round(rnorm(500,100,30))
DOB_Male = birth(500,start = as.POSIXct("1990-01-01"),by = 20000)
DaysAlive_Male = difftime(as.POSIXct(Sys.Date()),DOB)
Pass_Male = answer(500)
IQ_Female = round(rnorm(500,100,30))
DOB_Female = birth(500,start = as.POSIXct("1990-01-01"),by = 20000)
DaysAlive_Female = difftime(as.POSIXct(Sys.Date()),DOB)
Pass_Female = answer(500)
df = data.frame(DOB_Male,DaysAlive_Male,IQ_Male,Pass_Female,
DOB_Female,DaysAlive_Female,IQ_Female,Pass_Female)
assign(x = paste0(i,"_df"),value = df,envir = .GlobalEnv)
}
IQ_Male = round(rnorm(500,100,30))
DOB_Male = birth(500,start = as.POSIXct("1990-01-01"),by = 20000)
DaysAlive_Male = difftime(as.POSIXct(Sys.Date()),DOB)
library(wakefield)
for(i in c("a","b","c","d","e","f","g")){
IQ_Male = round(rnorm(500,100,30))
DOB_Male = birth(500,start = as.POSIXct("1990-01-01"),by = 20000)
DaysAlive_Male = difftime(as.POSIXct(Sys.Date()),DOB_Male)
Pass_Male = answer(500)
IQ_Female = round(rnorm(500,100,30))
DOB_Female = birth(500,start = as.POSIXct("1990-01-01"),by = 20000)
DaysAlive_Female = difftime(as.POSIXct(Sys.Date()),DOB_Female)
Pass_Female = answer(500)
df = data.frame(DOB_Male,DaysAlive_Male,IQ_Male,Pass_Female,
DOB_Female,DaysAlive_Female,IQ_Female,Pass_Female)
assign(x = paste0(i,"_df"),value = df,envir = .GlobalEnv)
}
dfs <- c("a_df")
get(dfs)
dfs <- c("a_df","b_df","c_df","d_df","e_df","f_df","g_df")
dir.create("./Data/Messy_Take2")
library(wakefield)
dir.create("./Data/Messy_Take2")
for(i in c("a","b","c","d","e","f","g")){
IQ_Male = round(rnorm(500,100,30))
DOB_Male = birth(500,start = as.POSIXct("1990-01-01"),by = 20000)
DaysAlive_Male = difftime(as.POSIXct(Sys.Date()),DOB_Male)
Pass_Male = answer(500)
IQ_Female = round(rnorm(500,100,30))
DOB_Female = birth(500,start = as.POSIXct("1990-01-01"),by = 20000)
DaysAlive_Female = difftime(as.POSIXct(Sys.Date()),DOB_Female)
Pass_Female = answer(500)
df = data.frame(DOB_Male,DaysAlive_Male,IQ_Male,Pass_Female,
DOB_Female,DaysAlive_Female,IQ_Female,Pass_Female)
assign(x = paste0(i,"_df"),value = df,envir = .GlobalEnv)
}
dfs <- c("a_df","b_df","c_df","d_df","e_df","f_df","g_df")
for(i in dfs){
write.csv(get(i),file = paste0("./Data/Messy_Take2/",i,".csv"),row.names = FALSE,quote = FALSE)
}
library(tidyverse)
models <- data.frame(
a1 = runif(250, -20, 40),
a2 = runif(250, -5, 5)
)
ggplot(sim1, aes(x, y)) +
geom_abline(aes(intercept = a1, slope = a2), data = models, alpha = 1/4) +
geom_point()
libray(modelr)
library(modelr)
ggplot(sim1, aes(x, y)) +
geom_abline(aes(intercept = a1, slope = a2), data = models, alpha = 1/4) +
geom_point()
library(tidyverse)
library(modelr)
models <- data.frame(
a1 = runif(250, -20, 40),
a2 = runif(250, -5, 5)
)
ggplot(sim1, aes(x, y)) +
geom_abline(aes(intercept = a1, slope = a2), data = models, alpha = 1/4) +
geom_point()
models
sim3
df <- tribble(
~y, ~x1, ~x2,
4, 2, 5,
5, 1, 6
)
model_matrix(df, y ~ x1)
df
model_matrix(df, y ~ x1)
model_matrix(df, y ~ x1+x2)
model_matrix(df, y ~ x1*x2)
sim1
sim2
sim3
sim4
ggplot(sim1,aes(x,y)) + geom_point()
sim2
ggplot(sim2,aes(x,y)) + geom_point()
sim3
ggplot(sim2,aes(x1,y,color=x2)) + geom_point()
ggplot(sim3,aes(x1,y,color=x2)) + geom_point()
mod1 <- lm(data = sim1,y~x)
mod1 <- lm(data = sim2,y~x)
sim2
sim3
mod1 <- lm(data = sim1,y~x)
mod2 <- lm(data = sim2,y~x)
mod3a <- lm(data = sim2,y~x1+x2)
mod3b <- lm(data = sim2,y~x1*x2)
mod3a <- lm(data = sim3,y~x1+x2)
mod3b <- lm(data = sim3,y~x1*x2)
ggplot(sim2,aes(x,y)) + geom_point() + geom_smooth(method = "lm",se=FALSE)
ggplot(sim1,aes(x,y)) + geom_point() + geom_smooth(method = "lm",se=FALSE)
ggplot(sim2,aes(x,y)) + geom_point() + geom_point(aes(x=x,y=mean(y)))
ggplot(sim2,aes(x,y)) + geom_point() + geom_point(aes(x=x,y=add_predictions(sim2,mod2)[,"pred"]))
add_predictions(sim2,mod2)[,"pred"]
add_predictions(sim2,mod2)[,"pred"]
c=add_predictions(sim2,mod2)[,"pred"]
add_predictions(sim2,mod2)$pred
ggplot(sim2,aes(x,y)) + geom_point() + geom_point(aes(x=x,y=add_predictions(sim2,mod2)$pred))
ggplot(sim2,aes(x,y)) + geom_point() + geom_point(aes(x=x,y=add_predictions(sim2,mod2)$pred),color="Red",size=4)
grid <- sim3 %>%
data_grid(x1,x2)
grid
gather_predictions(grid,mod3a,mod3b)
pred = gather_predictions(grid,mod3a,mod3b)
ggplot(sim3,aes(x1,y,color=x2)) +
geom_point() +
geom_line(data = pred, aes(y=pred))
ggplot(sim3,aes(x1,y,color=x2)) +
geom_point() +
geom_line(data = pred, aes(y=pred)) +
facet_wrap(~model)
residuals(mod3a)
sqrt(mean(residuals(mod3a)^2))
sqrt(mean(residuals(mod3b)^2))
sim3 <- sim3 %>%
gather_residuals(mod3a,mod3b)
sim3
library(tidyverse)
library(modelr)
# Some simulated data
sim1
ggplot(sim1,aes(x,y)) + geom_point() # x is numeric
sim2
ggplot(sim2,aes(x,y)) + geom_point() # x is categorical
sim3
ggplot(sim3,aes(x1,y,color=x2)) + geom_point() # categorical AND numeric predictors
# Fit a linear model for each
mod1 <- lm(data = sim1,y~x)
mod2 <- lm(data = sim2,y~x)
mod3a <- lm(data = sim3,y~x1+x2)
mod3b <- lm(data = sim3,y~x1*x2)
# Visualize the models
ggplot(sim1,aes(x,y)) + geom_point() + geom_smooth(method = "lm",se=FALSE) # easy, automatic
ggplot(sim2,aes(x,y)) + geom_point() + geom_point(aes(x=x,y=add_predictions(sim2,mod2)$pred),color="Red",size=4) # have to make predictions first
# bit harder.... need all unique values of x1 and x2 and then predict based on those
grid <- sim3 %>%
data_grid(x1,x2)
grid
pred = gather_predictions(grid,mod3a,mod3b)
pred
ggplot(sim3,aes(x1,y,color=x2)) +
geom_point() +
geom_line(data = pred, aes(y=pred)) +
facet_wrap(~model)
# which model is a better fit for these data?
sqrt(mean(residuals(mod3a)^2))
sqrt(mean(residuals(mod3b)^2))
sim3
sim3 <- sim3 %>%
gather_residuals(mod3a,mod3b)
sim3
